"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cheerio = require("cheerio");
const url_1 = require("url");
const linksAttr = {
    background: ['body'],
    cite: ['blockquote', 'del', 'ins', 'q'],
    data: ['object'],
    href: ['a', 'area', 'embed', 'link'],
    icon: ['command'],
    longdesc: ['frame', 'iframe'],
    manifest: ['html'],
    poster: ['video'],
    pluginspage: ['embed'],
    pluginurl: ['embed'],
    src: [
        'audio',
        'embed',
        'frame',
        'iframe',
        'img',
        'input',
        'script',
        'source',
        'track',
        'video',
    ],
    srcset: ['img', 'source'],
};
function getLinks(source, baseUrl) {
    const $ = cheerio.load(source);
    const links = new Array();
    Object.keys(linksAttr).forEach(attr => {
        const elements = linksAttr[attr].map(tag => `${tag}[${attr}]`).join(',');
        $(elements).each((i, element) => {
            const values = parseAttr(attr, element.attribs[attr]);
            links.push(...values);
        });
    });
    const sanitized = links
        .filter(link => !!link)
        .map(link => normalizeLink(link, baseUrl));
    return sanitized;
}
exports.getLinks = getLinks;
function parseAttr(name, value) {
    switch (name) {
        case 'srcset':
            return value
                .split(',')
                .map((pair) => pair.trim().split(/\s+/)[0]);
        default:
            return [value];
    }
}
function normalizeLink(link, baseUrl) {
    try {
        const slink = new url_1.URL(link, baseUrl);
        slink.hash = '';
        return slink.href;
    }
    catch (e) {
        return link;
    }
}
//# sourceMappingURL=links.js.map